# -*- ruby -*-

require 'formula'
require 'fileutils'

class RubyGemsDownloadStrategy < AbstractDownloadStrategy
  def fetch
    ohai "Fetching <%= package_name %> from gem source"
    HOMEBREW_CACHE.cd do
      system "gem", "fetch", "<%= package_name %>", "--version", resource.version
    end
  end

  def cached_location
    Pathname.new("#{HOMEBREW_CACHE}/<%= package_name %>-#{resource.version}.gem")
  end

  def clear_cache
    cached_location.unlink if cached_location.exist?
  end
end

class <%= formula_name %> < Formula
  url "<%= package_name %>", :using => RubyGemsDownloadStrategy
  version "<%= package_version %>"

  def install
    # Copy user's RubyGems config to temporary build home.
    buildpath_gemrc = "#{ENV['HOME']}/.gemrc"
    if File.exists?('<%= user_gemrc %>') && !File.exists?(buildpath_gemrc)
      FileUtils.cp('<%= user_gemrc %>', buildpath_gemrc)
    end

    # set GEM_HOME and GEM_PATH to make sure we package all the dependent gems
    # together without accidently picking up other gems on the gem path since
    # they might not be there if, say, we change to a different rvm gemset
    ENV['GEM_HOME']="#{prefix}"
    ENV['GEM_PATH']="#{prefix}"
    system "gem", "install", cached_download,
             "--no-ri",
             "--no-rdoc",
             "--no-wrapper",
             "--no-user-install",
             "--install-dir", prefix,
             "--bindir", bin

    bin.rmtree if bin.exist?
    bin.mkpath

    brew_gem_prefix = prefix+"gems/<%= package_name %>-#{package_version}"

    completion_for_bash = Dir[
                            "#{brew_gem_prefix}/completion{s,}/<%= package_name %>.{bash,sh}",
                            "#{brew_gem_prefix}/**/<%= package_name %>_completion{s,}.{bash,sh}"
                          ].first
    bash_completion.install completion_for_bash if completion_for_bash

    completion_for_zsh = Dir[
                           "#{brew_gem_prefix}/completions/<%= package_name %>.zsh",
                           "#{brew_gem_prefix}/**/<%= package_name %>_completion{s,}.zsh"
                         ].first
    zsh_completion.install completion_for_zsh if completion_for_zsh

    gemspec = Gem::Specification::load("#{prefix}/specifications/<%= package_name %>-#{package_version}.gemspec")
    ruby_libs = Dir.glob("#{prefix}/gems/*/lib")
    gemspec.executables.each do |exe|
      file = Pathname.new("#{brew_gem_prefix}/#{gemspec.bindir}/#{exe}")
      (bin+file.basename).open('w') do |f|
        f << <<-RUBY
#!/usr/bin/ruby
ENV['GEM_HOME']="#{prefix}"
ENV['GEM_PATH']="#{prefix}"
$:.unshift(#{ruby_libs.map(&:inspect).join(",")})
load "#{file}"
        RUBY
      end
    end
  end
end
